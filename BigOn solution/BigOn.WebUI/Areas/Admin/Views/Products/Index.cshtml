@model PagedViewModel<Product>

@{
    ViewData["Title"] = "Index";
}





<!-- Page-header start -->
<div class="page-header">
    <div class="row align-items-end">
        <div class="col-lg-8">
            <div class="page-header-title">
                <div class="d-inline">
                    <h4>Bootstrap Border Sizes</h4>
                    <span>
                        lorem ipsum dolor sit amet, consectetur adipisicing
                        elit
                    </span>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="page-header-breadcrumb">
                <ul class="breadcrumb-title">
                    <li class="breadcrumb-item" style="float: left;">
                        <a asp-action="index" asp-controller="Dashboard">
                            <i class="feather icon-home"></i>
                        </a>

                    <li class="breadcrumb-item" style="float: left;">
                        <span>Brands</span>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- Page-header end -->
<!-- Page-body start -->
<div class="page-body">
    <!-- Horizontal-border table start -->
    <div class="card">
        <div class="card-header">
            <h5>Horizontal Borders</h5>
            <span>
                Example of <code>horizontal</code> table borders. This is a
                default table border style attached to <code>.table</code> class.
                All borders have the same grey color and style, table itself doesn't
                have a border, but you can add this border using
                <code>.table-framed</code> class added to the table with
                <code>.table</code> class.
            </span>
            @Html.AntiForgeryToken()
        </div>
        <div class="card-block table-border-style">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                               
                            </th>
                            <th>
                               Name
                            </th>
                            <th>
                               ShortDescription
                            </th>
                            <th>
                              Price
                            </th>
                            <th class="operations">
                                @if (User.HasAccess("admin.products.create"))
                                {
                                    <a asp-action="Create" class="btn  btn-sm btn-primary"><i class="fa fa-plus"></i></a>
                                }

                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                   <td>

                                    Images
                                </td>
                                <td>

                                    @item.Name
                                </td>
                                <td>
                                    @item.ShortDescription
                                </td>
                                <td>
                                    @item.Price
                                </td>
                                <td class="operations">
                                    @if (User.HasAccess("admin.products.edit"))
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn  btn-sm btn-warning"><i class="fa fa-pencil"></i></a>
                                    }
                                    @if (User.HasAccess("admin.products.details"))
                                    {
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn  btn-sm btn-info"><i class="fa fa-eye"></i></a>
                                    }
                                    @if (User.HasAccess("admin.products.remove"))
                                    {
                                        <a class="btn btn-sm btn-danger" onclick="removeEntity(@item.Id,'@item.Name')"><i class="fa fa-trash"></i></a>
                                    }



                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @Model.GetPager(Url,"Index","Admin")
        </div>
    </div>
    <!-- Horizontal-border table end -->
    <!-- Vertical borders table start -->

</div>








@section addjs{
<script src="~/libs/sweetalert/sweetalert.min.js"></script>
<script src="~/libs/toastr.js/toastr.min.js"> </script>
<script src="~/libs/toastr.js/toastr.customize.js"></script>
<script class="removeable">

    function removeEntity(id,name){
        swal(`eminsinizki ${name} silinsin?`, {
           buttons: ["Xeyr", "Beli"],

     })
     .then((value)=>{
         if(value==true){
             let vToken = $('[name=__RequestVerificationToken]').val();
           let formData = new FormData();
           formData.set('__RequestVerificationToken',vToken);
           formData.set('id',id)

             $.ajax({
             url:`@Url.Action("Delete")/${id}`,
             data:formData,
             contentType:false,
             processData:false,
             type:'POST',
             success:function (response){
                 console.log(response);
                 if(response.error==true){
                     toastr.error(response.message,"xeta!")
                 }

                 location.reload();
             },
             error:function(errorResponse){
                 console.log(errorResponse);
             }

             });
         }
     });

    }
</script>
                                        }